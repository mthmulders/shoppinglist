<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>tk.mulders.shoppinglist</groupId>
   <artifactId>shoppinglist-server</artifactId>
   <version>0.0.1-SNAPSHOT</version>
   <packaging>war</packaging>
   <name>Shopping List Server</name>
   <description>Electronic Shopping List</description>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   </properties>

   <scm>
        <connection>scm:git:https://github.com/mthmulders/shoppinglist.git</connection>
        <developerConnection>scm:git:https://github.com/mthmulders/shoppinglist.git</developerConnection>
        <url>https://github.com/mthmulders/shoppinglist.git</url>
    </scm>

   <build>
      <!-- Maven will append the version to the finalName (which is the name given to the generated war, and hence the context root) -->
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <!-- Compiler plugin enforces Java 1.7 compatibility and activates annotation processors -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.1</version>
            <configuration>
               <source>1.7</source>
               <target>1.7</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.4</version>
            <configuration>
               <!-- Java EE 6 doesn't require web.xml, Maven needs to catch  up! -->
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
         <!-- Use this profile for any OpenShift specific customization your app will need. -->
         <!-- By default that is to put the resulting archive into the 'deployments' folder. -->
         <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
         <id>openshift</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-war-plugin</artifactId>
                  <version>2.4</version>
                  <configuration>
                     <outputDirectory>deployments</outputDirectory>
                     <warName>ROOT</warName>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

   </profiles>
</project>
